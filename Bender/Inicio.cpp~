#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include <iostream>
 
using namespace cv;
using namespace std;
 
Mat src, dst, cdst;

int main()
{
    VideoCapture cap(0);
    for(;;){
    cap >> src;
    cvtColor(src, src, CV_RGB2GRAY);
    threshold(src, src, 110, 200, 1);
    Canny(src, dst, 50, 200, 3); 
    cvtColor(dst, cdst, CV_GRAY2BGR); 
 
    vector<Vec2f> lines;
    // detect lines
    HoughLines(dst, lines, 1, CV_PI/180, 150, 0, 0 );
 
    // draw lines
    for( size_t i = 0; i < lines.size(); i++ )
    {
        float rho = lines[i][0], theta = lines[i][1];
	if( theta>CV_PI/180*170 || theta<CV_PI/180*10){
        	Point pt1, pt2;
        	double a = cos(theta), b = sin(theta);
        	double x0 = a*rho, y0 = b*rho;
       	 	pt1.x = cvRound(x0 + 1000*(-b));
       	 	pt1.y = cvRound(y0 + 1000*(a));
        	pt2.x = cvRound(x0 - 1000*(-b));
        	pt2.y = cvRound(y0 - 1000*(a));
		cout << "Lineas " << i << endl;
		//PUNTOS DE X E Y
        	line( cdst, pt1, pt2, Scalar(0,0,255), 3, CV_AA);
	}    
    }
 
    imshow("source", src);
    imshow("detected lines", cdst);
     usleep(2000);
    }    
return 0;
}
